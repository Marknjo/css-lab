// -----------------------------------------------------------------------------
// This file contains all application-wide Sass mixins.
// -----------------------------------------------------------------------------
@use 'sass:map';

/// Event wrapper
/// @author Harry Roberts
/// @param {Bool} $self [false] - Whether or not to include current selector
/// @link https://twitter.com/csswizardry/status/478938530342006784 Original tweet from Harry Roberts
@mixin on-event($self: false) {
  @if $self {
    &,
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  } @else {
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  }
}

/// Make a context based selector a little more friendly
/// @author Kitty Giraudel
/// @param {String} $context
@mixin when-inside($context) {
  #{$context} & {
    @content;
  }
}

/// Add a grid clear fix
@mixin clearFix {
  content: '';
  display: table;
  clear: both;
}

/// Utility margin Margins Generator
/// @param {String} $position [top|bottom|right|left] Margin position
// @param {String} $size-preference [large|small|medium|x-small|x-large] instructs the map.get the margin size from the predefined variables in the $size
@mixin u-margins($position, $size-preference) {
  @if ($position == bottom) {
    margin-bottom: map.get($size, $size-preference) !important;
  }

  @if ($position == top) {
    margin-top: map.get($size, $size-preference) !important;
  }

  @if ($position == left) {
    margin-left: map.get($size, $size-preference) !important;
  }

  @if ($position == right) {
    margin-right: map.get($size, $size-preference) !important;
  }
}
