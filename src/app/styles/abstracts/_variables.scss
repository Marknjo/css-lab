@use 'sass:map';
// -----------------------------------------------------------------------------
// This file contains all application-wide Sass variables.
// -----------------------------------------------------------------------------

/// Regular font family
/// @type List
$text-font-stack: 'Lato', sans-serif !default;

/// Code (monospace) font family
/// @type List
$code-font-stack: 'Courier New', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono',
  'Monaco', monospace !default;

/// Copy text color
/// @type Color
$text-color: #777 !default;

/// Main brand color
/// @type Color
$color-primary: #55c57a !default;
$color-primary-light: #7ed56f !default;
$color-primary-dark: #28b485 !default;

/// Light grey
/// @type Color
$white-color: #fff !default;

/// Light grey
/// @type Color
$light-grey: #ededed !default;

/// Medium grey
/// @type Color
$mid-grey: #999999 !default;

/// Dark grey
/// @type Color!
$dark-grey: #777 !default;

/// Container's maximum width
/// @type Length
$max-width: 1180px !default;

/// Breakpoints map
/// @prop {String} keys - Keys are identifiers mapped to a given length
/// @prop {Map} values - Values are actual breakpoints expressed in pixels
$breakpoints: (
  'small': 320px,
  'medium': 768px,
  'large': 1024px,
) !default;

/// Relative or absolute URL where all assets are served from
/// @type String
/// @example scss - When using CDN
///   $base-url: 'http://cdn.example.com/assets/';
$base-url: '/assets/' !default;

/// Sizes
$font-base: 62.5%;
$size-normal: 1.6rem;

/// SIZES DEFINATION
$size: (
  'x-largest': 16rem,
  'largest': 8rem,
  'large': 6.4rem,
  'medium': 4rem,
  'normal': 2.4rem,
  'small': 1.6rem,
  'smallest': 1rem,
  'x-smallest': 0.8rem,
) !default;

/// FONT SIZES DEFINATION
$font-size: (
  'x-largest': 8rem,
  'largest': 5.6rem,
  'large': 3.6rem,
  'medium': 2rem,
  'normal': 1.6rem,
  'small': 1.2rem,
  'smallest': 1rem,
  'x-smallest': 0.8rem,
) !default;

/// GRID SIZE
$grid-width: (
  'max': 114rem,
  'small': 37.5rem,
) !default;

/// GRID MARGINS HORIZONTAL
$grid-gutter-horizontal: (
  'largest': map.get($size, 'large'),
  'large': map.get($size, 'medium'),
  'medium': map.get($size, 'normal'),
  'small': map.get($size, 'small'),
  'smallest': map.get($size, 'x-smallest'),
);

// GRID MARGINS VERTICLE
$grid-gutter-verticle: (
  'largest': map.get($size, 'large'),
  'large': map.get($size, 'medium'),
  'medium': map.get($size, 'normal'),
  'small': map.get($size, 'small'),
  'smallest': map.get($size, 'x-smallest'),
);
